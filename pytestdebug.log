versions pytest-8.4.2, python-3.13.9.final.0
invocation_dir=C:\Users\OmarDorgham\PycharmProjects\Test_login_page
cwd=C:\Users\OmarDorgham\PycharmProjects\Test_login_page
args=('--debug',)

  pytest_cmdline_main [hook]
      config: <_pytest.config.Config object at 0x0000023D48197380>
    pytest_plugin_registered [hook]
        plugin: <Session  exitstatus='<UNSET>' testsfailed=0 testscollected=0>
        plugin_name: session
        manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
    finish pytest_plugin_registered --> [] [hook]
    pytest_configure [hook]
        config: <_pytest.config.Config object at 0x0000023D48197380>
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x0000023D4837E3C0>
          plugin_name: lfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x0000023D48B342F0>
          plugin_name: nfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: faulthandler [assertion]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          plugin_name: legacypath-tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: pdb [assertion]
    early skip of rewriting module: cmd [assertion]
    early skip of rewriting module: code [assertion]
    early skip of rewriting module: codeop [assertion]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
          plugin_name: 2462225878720
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x0000023D48197380>
          plugin_name: pytestconfig
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\mark\\__init__.py'>
          plugin_name: mark
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\main.py'>
          plugin_name: main
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\runner.py'>
          plugin_name: runner
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\fixtures.py'>
          plugin_name: fixtures
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\helpconfig.py'>
          plugin_name: helpconfig
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\python.py'>
          plugin_name: python
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\terminal.py'>
          plugin_name: terminal
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\debugging.py'>
          plugin_name: debugging
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\unittest.py'>
          plugin_name: unittest
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\capture.py'>
          plugin_name: capture
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\skipping.py'>
          plugin_name: skipping
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.legacypath' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\legacypath.py'>
          plugin_name: legacypath
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\tmpdir.py'>
          plugin_name: tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\monkeypatch.py'>
          plugin_name: monkeypatch
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\recwarn.py'>
          plugin_name: recwarn
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\pastebin.py'>
          plugin_name: pastebin
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\assertion\\__init__.py'>
          plugin_name: assertion
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\junitxml.py'>
          plugin_name: junitxml
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\doctest.py'>
          plugin_name: doctest
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\cacheprovider.py'>
          plugin_name: cacheprovider
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\freeze_support.py'>
          plugin_name: freeze_support
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\setuponly.py'>
          plugin_name: setuponly
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\setupplan.py'>
          plugin_name: setupplan
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\stepwise.py'>
          plugin_name: stepwise
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\unraisableexception.py'>
          plugin_name: unraisableexception
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\threadexception.py'>
          plugin_name: threadexception
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\warnings.py'>
          plugin_name: warnings
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\logging.py'>
          plugin_name: logging
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\reports.py'>
          plugin_name: reports
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\faulthandler.py'>
          plugin_name: faulthandler
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_base_url.plugin' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\pytest_base_url\\plugin.py'>
          plugin_name: base_url
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_playwright.pytest_playwright' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\pytest_playwright\\pytest_playwright.py'>
          plugin_name: playwright
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='fd' _global_capturing=<MultiCapture out=<FDCapture 1 oldfd=9 _state='suspended' tmpfile=<EncodedFile name='<tempfile._TemporaryFileWrapper object at 0x0000023D48717B60>' mode='r+' encoding='utf-8'>> err=<FDCapture 2 oldfd=11 _state='suspended' tmpfile=<EncodedFile name='<tempfile._TemporaryFileWrapper object at 0x0000023D486EF890>' mode='r+' encoding='utf-8'>> in_=<FDCapture 0 oldfd=7 _state='started' tmpfile=<_io.TextIOWrapper name='nul' mode='r' encoding='utf-8'>> _state='suspended' _in_suspended=False> _capture_fixture=None>
          plugin_name: capturemanager
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          plugin_name: session
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x0000023D4837E3C0>
          plugin_name: lfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x0000023D48B342F0>
          plugin_name: nfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          plugin_name: legacypath-tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x0000023D48B346E0>
          plugin_name: terminalreporter
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x0000023D48B35D30>
          plugin_name: logging-plugin
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
    finish pytest_configure --> [] [hook]
    pytest_sessionstart [hook]
        session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
          plugin_name: 2462225878720
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x0000023D48197380>
          plugin_name: pytestconfig
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\mark\\__init__.py'>
          plugin_name: mark
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\main.py'>
          plugin_name: main
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\runner.py'>
          plugin_name: runner
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\fixtures.py'>
          plugin_name: fixtures
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\helpconfig.py'>
          plugin_name: helpconfig
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\python.py'>
          plugin_name: python
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\terminal.py'>
          plugin_name: terminal
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\debugging.py'>
          plugin_name: debugging
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\unittest.py'>
          plugin_name: unittest
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\capture.py'>
          plugin_name: capture
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\skipping.py'>
          plugin_name: skipping
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.legacypath' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\legacypath.py'>
          plugin_name: legacypath
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\tmpdir.py'>
          plugin_name: tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\monkeypatch.py'>
          plugin_name: monkeypatch
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\recwarn.py'>
          plugin_name: recwarn
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\pastebin.py'>
          plugin_name: pastebin
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\assertion\\__init__.py'>
          plugin_name: assertion
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\junitxml.py'>
          plugin_name: junitxml
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\doctest.py'>
          plugin_name: doctest
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\cacheprovider.py'>
          plugin_name: cacheprovider
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\freeze_support.py'>
          plugin_name: freeze_support
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\setuponly.py'>
          plugin_name: setuponly
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\setupplan.py'>
          plugin_name: setupplan
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\stepwise.py'>
          plugin_name: stepwise
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\unraisableexception.py'>
          plugin_name: unraisableexception
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\threadexception.py'>
          plugin_name: threadexception
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\warnings.py'>
          plugin_name: warnings
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\logging.py'>
          plugin_name: logging
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\reports.py'>
          plugin_name: reports
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\faulthandler.py'>
          plugin_name: faulthandler
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_base_url.plugin' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\pytest_base_url\\plugin.py'>
          plugin_name: base_url
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_playwright.pytest_playwright' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\pytest_playwright\\pytest_playwright.py'>
          plugin_name: playwright
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='fd' _global_capturing=<MultiCapture out=<FDCapture 1 oldfd=9 _state='suspended' tmpfile=<EncodedFile name='<tempfile._TemporaryFileWrapper object at 0x0000023D48717B60>' mode='r+' encoding='utf-8'>> err=<FDCapture 2 oldfd=11 _state='suspended' tmpfile=<EncodedFile name='<tempfile._TemporaryFileWrapper object at 0x0000023D486EF890>' mode='r+' encoding='utf-8'>> in_=<FDCapture 0 oldfd=7 _state='started' tmpfile=<_io.TextIOWrapper name='nul' mode='r' encoding='utf-8'>> _state='suspended' _in_suspended=False> _capture_fixture=None>
          plugin_name: capturemanager
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          plugin_name: session
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x0000023D4837E3C0>
          plugin_name: lfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x0000023D48B342F0>
          plugin_name: nfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          plugin_name: legacypath-tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x0000023D48B346E0>
          plugin_name: terminalreporter
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x0000023D48B35D30>
          plugin_name: logging-plugin
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.fixtures.FixtureManager object at 0x0000023D48B36660>
          plugin_name: funcmanage
          manager: <_pytest.config.PytestPluginManager object at 0x0000023D48194EC0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_report_header [hook]
          config: <_pytest.config.Config object at 0x0000023D48197380>
          start_path: C:\Users\OmarDorgham\PycharmProjects\Test_login_page
          startdir: C:\Users\OmarDorgham\PycharmProjects\Test_login_page
      early skip of rewriting module: importlib.metadata._adapters [assertion]
      early skip of rewriting module: email.message [assertion]
      early skip of rewriting module: quopri [assertion]
      early skip of rewriting module: email.utils [assertion]
      early skip of rewriting module: email._parseaddr [assertion]
      early skip of rewriting module: email.errors [assertion]
      early skip of rewriting module: email._policybase [assertion]
      early skip of rewriting module: email.header [assertion]
      early skip of rewriting module: email.quoprimime [assertion]
      early skip of rewriting module: email.base64mime [assertion]
      early skip of rewriting module: email.charset [assertion]
      early skip of rewriting module: email.encoders [assertion]
      early skip of rewriting module: email._encoded_words [assertion]
      early skip of rewriting module: email.iterators [assertion]
      early skip of rewriting module: importlib.metadata._text [assertion]
      early skip of rewriting module: email.parser [assertion]
      early skip of rewriting module: email.feedparser [assertion]
      finish pytest_report_header --> [['rootdir: C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page', 'plugins: base-url-2.1.0, playwright-0.7.1'], ['using: pytest-8.4.2', 'registered third-party plugins:', '  pytest-base-url-2.1.0 at C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\pytest_base_url\\plugin.py', '  pytest-playwright-0.7.1 at C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\pytest_playwright\\pytest_playwright.py']] [hook]
    finish pytest_sessionstart --> [] [hook]
    pytest_collection [hook]
        session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
    perform_collect <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0> ['C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page'] [collection]
        pytest_collectstart [hook]
            collector: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        processing argument CollectionArgument(path=WindowsPath('C:/Users/OmarDorgham/PycharmProjects/Test_login_page'), parts=[], module_name=None) [collection]
            pytest_collect_directory [hook]
                path: C:\Users\OmarDorgham\PycharmProjects\Test_login_page
                parent: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> <Dir Test_login_page> [hook]
        finish pytest_make_collect_report --> <CollectReport '' lenresult=1 outcome='passed'> [hook]
        pytest_collectreport [hook]
            report: <CollectReport '' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
    genitems <Dir Test_login_page> [collection]
      pytest_collectstart [hook]
          collector: <Dir Test_login_page>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir Test_login_page>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x0000023D48197380>
            collection_path: C:\Users\OmarDorgham\PycharmProjects\Test_login_page\.git
            path: C:\Users\OmarDorgham\PycharmProjects\Test_login_page\.git
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x0000023D48197380>
            collection_path: C:\Users\OmarDorgham\PycharmProjects\Test_login_page\.idea
            path: C:\Users\OmarDorgham\PycharmProjects\Test_login_page\.idea
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x0000023D48197380>
            collection_path: C:\Users\OmarDorgham\PycharmProjects\Test_login_page\.pytest_cache
            path: C:\Users\OmarDorgham\PycharmProjects\Test_login_page\.pytest_cache
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x0000023D48197380>
            collection_path: C:\Users\OmarDorgham\PycharmProjects\Test_login_page\.venv
            path: C:\Users\OmarDorgham\PycharmProjects\Test_login_page\.venv
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x0000023D48197380>
            collection_path: C:\Users\OmarDorgham\PycharmProjects\Test_login_page\__pycache__
            path: C:\Users\OmarDorgham\PycharmProjects\Test_login_page\__pycache__
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x0000023D48197380>
            collection_path: C:\Users\OmarDorgham\PycharmProjects\Test_login_page\pytestdebug.log
            path: C:\Users\OmarDorgham\PycharmProjects\Test_login_page\pytestdebug.log
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir Test_login_page>
            file_path: C:\Users\OmarDorgham\PycharmProjects\Test_login_page\pytestdebug.log
            path: C:\Users\OmarDorgham\PycharmProjects\Test_login_page\pytestdebug.log
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x0000023D48197380>
            collection_path: C:\Users\OmarDorgham\PycharmProjects\Test_login_page\test_login_positive.py
            path: C:\Users\OmarDorgham\PycharmProjects\Test_login_page\test_login_positive.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir Test_login_page>
            file_path: C:\Users\OmarDorgham\PycharmProjects\Test_login_page\test_login_positive.py
            path: C:\Users\OmarDorgham\PycharmProjects\Test_login_page\test_login_positive.py
          pytest_pycollect_makemodule [hook]
              parent: <Dir Test_login_page>
              module_path: C:\Users\OmarDorgham\PycharmProjects\Test_login_page\test_login_positive.py
              path: C:\Users\OmarDorgham\PycharmProjects\Test_login_page\test_login_positive.py
          finish pytest_pycollect_makemodule --> <Module test_login_positive.py> [hook]
        finish pytest_collect_file --> [<Module test_login_positive.py>] [hook]
      finish pytest_make_collect_report --> <CollectReport '.' lenresult=1 outcome='passed'> [hook]
    genitems <Module test_login_positive.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_login_positive.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_login_positive.py>
      find_module called for: test_login_positive [assertion]
      matched test file 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\test_login_positive.py' [assertion]
      _read_pyc(C:\Users\OmarDorgham\PycharmProjects\Test_login_page\test_login_positive.py): out of date [assertion]
      rewriting WindowsPath('C:/Users/OmarDorgham/PycharmProjects/Test_login_page/test_login_positive.py') [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_login_positive.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_login_positive.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_login_positive.py>
            name: re
            obj: <module 're' from 'C:\\Program Files\\WindowsApps\\PythonSoftwareFoundation.Python.3.13_3.13.2544.0_x64__qbz5n2kfra8p0\\Lib\\re\\__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_login_positive.py>
            name: Page
            obj: <class 'playwright.sync_api._generated.Page'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_login_positive.py>
            name: expect
            obj: <playwright.sync_api.Expect object at 0x0000023D48247A10>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_login_positive.py>
            name: pytest_playwright
            obj: <module 'pytest_playwright' from 'C:\\Users\\OmarDorgham\\PycharmProjects\\Test_login_page\\.venv\\Lib\\site-packages\\pytest_playwright\\__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_login_positive.py>
            name: test_login_positive_01
            obj: <function test_login_positive_01 at 0x0000023D48BEC7C0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x0000023D48BA8D70>
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x0000023D48197380>
                val: chromium
                argname: browser_name
            finish pytest_make_parametrize_id --> None [hook]
          early skip of rewriting module: encodings.unicode_escape [assertion]
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_login_positive_01[chromium]>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'test_login_positive.py' lenresult=1 outcome='passed'> [hook]
    genitems <Function test_login_positive_01[chromium]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_login_positive_01[chromium]>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'test_login_positive.py' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport '.' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collection_modifyitems [hook]
          session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          config: <_pytest.config.Config object at 0x0000023D48197380>
          items: [<Function test_login_positive_01[chromium]>]
      finish pytest_collection_modifyitems --> [] [hook]
      pytest_collection_finish [hook]
          session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        pytest_report_collectionfinish [hook]
            config: <_pytest.config.Config object at 0x0000023D48197380>
            items: [<Function test_login_positive_01[chromium]>]
            start_path: C:\Users\OmarDorgham\PycharmProjects\Test_login_page
            startdir: C:\Users\OmarDorgham\PycharmProjects\Test_login_page
        finish pytest_report_collectionfinish --> [] [hook]
      finish pytest_collection_finish --> [] [hook]
    finish pytest_collection --> None [hook]
    pytest_runtestloop [hook]
        session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=1>
      pytest_runtest_protocol [hook]
          item: <Function test_login_positive_01[chromium]>
          nextitem: None
        pytest_runtest_logstart [hook]
            nodeid: test_login_positive.py::test_login_positive_01[chromium]
            location: ('test_login_positive.py', 6, 'test_login_positive_01[chromium]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_login_positive_01[chromium]>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='base_url' scope='session' baseid=''>
              request: <SubRequest 'base_url' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_setup -->  [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='_verify_url' scope='session' baseid=''>
              request: <SubRequest '_verify_url' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_setup --> <_pytest.config.Config object at 0x0000023D48197380> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='delete_output_dir' scope='session' baseid=''>
              request: <SubRequest 'delete_output_dir' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='browser_type_launch_args' scope='session' baseid=''>
              request: <SubRequest 'browser_type_launch_args' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_setup --> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='playwright' scope='session' baseid=''>
              request: <SubRequest 'playwright' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_setup --> <playwright._impl._playwright.Playwright object at 0x0000023D48BAA510> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='browser_name' scope='session' baseid=''>
              request: <SubRequest 'browser_name' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_setup --> chromium [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='browser_type' scope='session' baseid=''>
              request: <SubRequest 'browser_type' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_setup --> <BrowserType name=chromium executable_path=C:\Users\OmarDorgham\AppData\Local\ms-playwright\chromium-1187\chrome-win\chrome.exe> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='connect_options' scope='session' baseid=''>
              request: <SubRequest 'connect_options' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='launch_browser' scope='session' baseid=''>
              request: <SubRequest 'launch_browser' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_setup --> <function launch_browser.<locals>.launch at 0x0000023D48BEF560> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='browser' scope='session' baseid=''>
              request: <SubRequest 'browser' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_setup --> <Browser type=<BrowserType name=chromium executable_path=C:\Users\OmarDorgham\AppData\Local\ms-playwright\chromium-1187\chrome-win\chrome.exe> version=140.0.7339.16> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='device' scope='session' baseid=''>
              request: <SubRequest 'device' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='_pw_artifacts_folder' scope='session' baseid=''>
              request: <SubRequest '_pw_artifacts_folder' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_setup --> <TemporaryDirectory 'C:\\Users\\OMARDO~1\\AppData\\Local\\Temp\\playwright-pytest-hr4qjcdq'> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='browser_context_args' scope='session' baseid=''>
              request: <SubRequest 'browser_context_args' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_setup --> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='output_path' scope='function' baseid=''>
              request: <SubRequest 'output_path' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_setup --> C:\Users\OmarDorgham\PycharmProjects\Test_login_page\test-results\test-login-positive-py-test-login-positive-01-chromium [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='_artifacts_recorder' scope='function' baseid=''>
              request: <SubRequest '_artifacts_recorder' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_setup --> <pytest_playwright.pytest_playwright.ArtifactsRecorder object at 0x0000023D48BAB230> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='new_context' scope='function' baseid=''>
              request: <SubRequest 'new_context' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_setup --> <function new_context.<locals>._new_context at 0x0000023D48CCBCE0> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='context' scope='function' baseid=''>
              request: <SubRequest 'context' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_setup --> <BrowserContext browser=<Browser type=<BrowserType name=chromium executable_path=C:\Users\OmarDorgham\AppData\Local\ms-playwright\chromium-1187\chrome-win\chrome.exe> version=140.0.7339.16>> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='page' scope='function' baseid=''>
              request: <SubRequest 'page' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_setup --> <Page url='about:blank'> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_login_positive_01[chromium]>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'test_login_positive.py::test_login_positive_01[chromium]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_login_positive.py::test_login_positive_01[chromium]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_login_positive.py::test_login_positive_01[chromium]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x0000023D48197380>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_login_positive_01[chromium]>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_login_positive_01[chromium]>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_login_positive_01[chromium]>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'test_login_positive.py::test_login_positive_01[chromium]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_login_positive.py::test_login_positive_01[chromium]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_login_positive.py::test_login_positive_01[chromium]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x0000023D48197380>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_login_positive_01[chromium]>
            nextitem: None
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='page' scope='function' baseid=''>
              request: <SubRequest 'page' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='page' scope='function' baseid=''>
              request: <SubRequest 'page' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='context' scope='function' baseid=''>
              request: <SubRequest 'context' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='context' scope='function' baseid=''>
              request: <SubRequest 'context' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='new_context' scope='function' baseid=''>
              request: <SubRequest 'new_context' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='new_context' scope='function' baseid=''>
              request: <SubRequest 'new_context' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='_artifacts_recorder' scope='function' baseid=''>
              request: <SubRequest '_artifacts_recorder' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='_artifacts_recorder' scope='function' baseid=''>
              request: <SubRequest '_artifacts_recorder' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='output_path' scope='function' baseid=''>
              request: <SubRequest 'output_path' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='new_context' scope='function' baseid=''>
              request: <SubRequest 'new_context' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='browser_context_args' scope='session' baseid=''>
              request: <SubRequest 'browser_context_args' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='_artifacts_recorder' scope='function' baseid=''>
              request: <SubRequest '_artifacts_recorder' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='browser_context_args' scope='session' baseid=''>
              request: <SubRequest 'browser_context_args' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='_pw_artifacts_folder' scope='session' baseid=''>
              request: <SubRequest '_pw_artifacts_folder' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='browser_context_args' scope='session' baseid=''>
              request: <SubRequest 'browser_context_args' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='device' scope='session' baseid=''>
              request: <SubRequest 'device' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='new_context' scope='function' baseid=''>
              request: <SubRequest 'new_context' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='browser' scope='session' baseid=''>
              request: <SubRequest 'browser' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='browser' scope='session' baseid=''>
              request: <SubRequest 'browser' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='launch_browser' scope='session' baseid=''>
              request: <SubRequest 'launch_browser' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='launch_browser' scope='session' baseid=''>
              request: <SubRequest 'launch_browser' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='connect_options' scope='session' baseid=''>
              request: <SubRequest 'connect_options' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='launch_browser' scope='session' baseid=''>
              request: <SubRequest 'launch_browser' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='browser_type' scope='session' baseid=''>
              request: <SubRequest 'browser_type' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='browser_type' scope='session' baseid=''>
              request: <SubRequest 'browser_type' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='browser_name' scope='session' baseid=''>
              request: <SubRequest 'browser_name' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='_artifacts_recorder' scope='function' baseid=''>
              request: <SubRequest '_artifacts_recorder' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='browser_context_args' scope='session' baseid=''>
              request: <SubRequest 'browser_context_args' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='browser_type' scope='session' baseid=''>
              request: <SubRequest 'browser_type' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='playwright' scope='session' baseid=''>
              request: <SubRequest 'playwright' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='launch_browser' scope='session' baseid=''>
              request: <SubRequest 'launch_browser' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='browser_type_launch_args' scope='session' baseid=''>
              request: <SubRequest 'browser_type_launch_args' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='delete_output_dir' scope='session' baseid=''>
              request: <SubRequest 'delete_output_dir' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='_artifacts_recorder' scope='function' baseid=''>
              request: <SubRequest '_artifacts_recorder' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='output_path' scope='function' baseid=''>
              request: <SubRequest 'output_path' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='browser_context_args' scope='session' baseid=''>
              request: <SubRequest 'browser_context_args' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='device' scope='session' baseid=''>
              request: <SubRequest 'device' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='browser_type_launch_args' scope='session' baseid=''>
              request: <SubRequest 'browser_type_launch_args' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='delete_output_dir' scope='session' baseid=''>
              request: <SubRequest 'delete_output_dir' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='_verify_url' scope='session' baseid=''>
              request: <SubRequest '_verify_url' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='browser_context_args' scope='session' baseid=''>
              request: <SubRequest 'browser_context_args' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='_verify_url' scope='session' baseid=''>
              request: <SubRequest '_verify_url' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='base_url' scope='session' baseid=''>
              request: <SubRequest 'base_url' for <Function test_login_positive_01[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_login_positive_01[chromium]>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'test_login_positive.py::test_login_positive_01[chromium]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_login_positive.py::test_login_positive_01[chromium]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_login_positive.py::test_login_positive_01[chromium]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x0000023D48197380>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: test_login_positive.py::test_login_positive_01[chromium]
            location: ('test_login_positive.py', 6, 'test_login_positive_01[chromium]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
    finish pytest_runtestloop --> True [hook]
    pytest_sessionfinish [hook]
        session: <Session  exitstatus=0 testsfailed=0 testscollected=1>
        exitstatus: 0
      pytest_terminal_summary [hook]
          terminalreporter: <_pytest.terminal.TerminalReporter object at 0x0000023D48B346E0>
          exitstatus: 0
          config: <_pytest.config.Config object at 0x0000023D48197380>
      finish pytest_terminal_summary --> [] [hook]
    finish pytest_sessionfinish --> [] [hook]
    pytest_unconfigure [hook]
        config: <_pytest.config.Config object at 0x0000023D48197380>
    finish pytest_unconfigure --> [] [hook]
